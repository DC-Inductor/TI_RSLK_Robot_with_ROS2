cmake_minimum_required(VERSION 3.8)
project(agitr)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
find_package(rclcpp REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(turtlesim REQUIRED)

#hello world
add_executable(Hello_world src/Hello_world.cpp)
ament_target_dependencies(Hello_world rclcpp)

#pubvel
add_executable(pubvelcpp src/pubvelcpp.cpp)
ament_target_dependencies(pubvelcpp rclcpp geometry_msgs)

#square
#add_executable(turtleSquare src/turtleSquare.cpp)
#ament_target_dependencies(turtleSquare rclcpp geometry_msgs)

#readanalogdelimitedRos
add_executable(readanalogdelimitedRos src/readanalogdelimitedRos.cpp)
ament_target_dependencies(readanalogdelimitedRos rclcpp geometry_msgs)

#subpose
add_executable(subpose src/subpose.cpp)
ament_target_dependencies(subpose rclcpp turtlesim)

#Joystick_big_man_thing_for_the_final_project
add_executable(JoystickPublish src/JoystickPublish.cpp)
ament_target_dependencies(JoystickPublish rclcpp geometry_msgs)


#install all the executables
install(TARGETS 
Hello_world 
pubvelcpp 
readanalogdelimitedRos
subpose 
JoystickPublish
DESTINATION lib/${PROJECT_NAME})

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
